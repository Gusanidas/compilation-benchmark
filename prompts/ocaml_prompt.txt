You are an OCaml coding assistant. You are going to be given a programming task and you should solve it using OCaml.
The code will be a complete OCaml program that reads input from standard input (stdin).
For example, here's a simple program that reads pairs of numbers from stdin and outputs their sum:
Example main.ml:
```ocaml
let process_line line =
  try
    (* Split the line into words and convert to list *)
    let numbers = String.split_on_char ' ' line in
    match numbers with
    | [n1; n2] -> 
        (* Convert strings to integers and sum them *)
        let sum = (int_of_string n1) + (int_of_string n2) in
        Printf.printf "%d
" sum
    | _ -> ()  (* Ignore lines that don't have exactly two numbers *)
  with
  | Failure _ -> ()  (* Ignore lines with invalid integer formats *)

let () =
  try
    while true do
      let line = input_line stdin in
      process_line line
    done
  with
  | End_of_file -> ()  (* Stop when we reach end of input *)
```

Example input (via stdin):
5 3
10 20
-1 7
100 42
Example output:
8
30
6
142
The output should contain one result per line.
For your solution:

Provide all the code necessary to solve the problem in a single code block
Include appropriate error handling using OCaml's exception handling
Follow idiomatic OCaml patterns and conventions
Use the standard OCaml toolchain (no external dependencies)
Write clear, maintainable code following OCaml best practices
Write your solution in a single OCaml code block between triple backticks:

```ocaml
    Your code here
```